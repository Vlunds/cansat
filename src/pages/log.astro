---
import { supabase } from "../lib/supabase";
const { data, error } = await supabase.from("measurements").select();
console.log(data);
console.log(error);
import "../css/generalstyle.css";
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Micropy -- målinger</title>
    </head>
    <body>
        <div class="topnav">
            <a class="small" href="/"
                ><img
                    src="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.iconsdb.com%2Ficons%2Fdownload%2Fwhite%2Farrow-121-512.png&f=1&nofb=1&ipt=8d9dd49a1cb8b921ce939576cd0d6c0b69f42f4bad36f88b163f3f3133dc86ab&ipo=images"
                    height="51"
                    width="51"
                /></a
            >
            <a class="large" href="data">Måling</a>
            <a class="active large" href="/log">Log</a>
        </div>
        <div class="sidenav">
            <a class="active1" href="/log">Log</a>
        </div>
        <div class="main">
            <p id="titel">Tidligere målinger</p>
            <ul>
                {
                    data.map((row) => (
                        <li>
                            <span class="list-text">
                                Trykket er: {row.Tryk}, temperaturen er:{" "}
                                {row.Temperatur}
                            </span>
                        </li>
                    ))
                }
            </ul>
        </div>
    </body>
</html>
<script>
    import { supabase } from "../lib/supabase";
    const { data, error } = await supabase.from("measurements").select();
    console.log(data);
    console.log(error);

    const Tryk = Astro.url.searchParams.get("Tryk");
    console.log(`Tryk received: ${Tryk}`);
    if (Tryk) {
        const { data, error } = await supabase
            .from("measurements")
            .insert({ Tryk: parseInt(Tryk) });
        if (error) console.log(`Insert error: ${error}`);
    }
</script>



<style>
    #titel {
        text-align: center;
        font-size: 30px;
        color: #fff;
        padding-bottom: 0px;
    }

    ul {
        list-style-type: none;
        padding: 0;
        max-width: 100%;
        margin: 0 auto;
    }

    .main {
        padding: 5px 0px 5px 0px; /*overrider generalstyle.ccs*/
    }

    li {
        background: rgb(39, 39, 39);
        margin: 10px 0;
        padding: 15px;
        font-size: 16px;
        color: white;
        position: relative;
        overflow: hidden;
        position: relative; 
        z-index: 0;
    }

    li::before {
        content: "";
        position: absolute;
        top: 0;
        left: 15%; 
        width: 70%; 
        height: 100%; 
        background: rgba(255, 255, 255, 0.3); 
        z-index: 0; 
    }

    li::after {
    content: counter(list-item) ". "; /*giver tal*/
    position: absolute;
    top: 50%; /*centrerer vertikalt*/
    left: 12%;
    transform: translateY(-50%); /*centrerer vertikalt*/
    font-size: 20px;
    color: lightgray; 
    z-index: 2; 
    }

    li:nth-child(even) {
        background: #3d3d3d;
    }

    .list-text {
        position: relative;
        z-index: 1; 
        color: white; 
    }

    li span {
        position: relative; 
        z-index: 1; 
        text-align: left; 
        padding-left: 16%; /
    }
</style>