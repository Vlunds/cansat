---
import "../css/generalstyle.css";
import { supabase } from "../lib/supabase";
const { data, error } = await supabase.from("measurements").select();
console.log(data);
console.log(error);
const Temperatur = Astro.url.searchParams.get("Temperatur");
console.log(`Temperatur received: ${Temperatur}`);
const Tryk = Astro.url.searchParams.get("Tryk");
console.log(`Tryk received: ${Tryk}`);
if (Tryk || Temperatur) {
    const { data, error } = await supabase
        .from("measurements")
        .insert({ Tryk: parseInt(Tryk), Temperatur: parseInt(Temperatur) });
    if (error) console.log(`Insert error: ${error}`);
}
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sensor Data</title>
</head>
<body>
    <h1>Sensor Data</h1>
    <p>Temperatur: <span id="temp">Loading...</span>°C</p>
    <p>Tryk: <span id="pressure">Loading...</span> Pa</p>

    <script>
        // Funktion til at hente data fra URL'en
        function fetchData() {
            const url = 'https://cansat1.netlify.app/data'; // URL som modtager sensor data
            fetch(url)
                .then(response => response.json())  // Vi forventer at få JSON som svar
                .then(data => {
                    // Opdater HTML med dataene
                    document.getElementById('temp').textContent = data.Temperature;
                    document.getElementById('pressure').textContent = data.Pressure;
                })
                .catch(error => console.error('Fejl ved hentning af data:', error));
        }

        // Kald funktionen for at hente data
        fetchData();

        // Opdater data hvert 10. sekund
        setInterval(fetchData, 10000);
    </script>
</body>
</html>
<script>
    // Skift til aktuel microcontroller IP
    const ip = "192.168.4.1";
    const p = document.querySelector("#response");
    
    async function getData() {
        if (!ip) return;
        console.log(`Forbinder til: ${ip}`);
        let data = "";
        try {
            const res = await fetch(`http://${ip}`);
            data = await res.text();
        } catch (e) {
            console.log(e);
        }
        console.log(`Data modtaget: ${data}`);
        p.innerHTML = data; // Opdaterer HTML-indholdet
    }
    
    getData();
</script>